generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model city {
  city_id     Int      @id @default(autoincrement())
  name        String   @default("0") @db.VarChar(255)
  state_id    Int      @default(0)
  country_id  Int      @default(0)
  created_on  DateTime @default(dbgenerated("(now())")) @db.Timestamp(0)
  modified_on DateTime @db.Timestamp(0)
  is_deleted  Boolean  @default(false)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model company {
  company_id          Int       @id @default(autoincrement())
  name                String    @db.VarChar(50)
  short_name          String?   @db.VarChar(20)
  address             String?   @db.VarChar(250)
  pincode             String    @default("") @db.VarChar(6)
  city_id             Int
  state_id            Int
  country_id          Int
  contact_no_1        String    @default("") @db.VarChar(15)
  contact_no_2        String?   @default("") @db.VarChar(15)
  email_id            String    @default("") @db.VarChar(50)
  about_us            String?   @default("") @db.VarChar(500)
  logo_filename_image String?   @default("") @db.VarChar(50)
  created_on          DateTime  @default(dbgenerated("(now())")) @db.Timestamp(0)
  created_by          Int       @default(0)
  modified_on         DateTime? @db.Timestamp(0)
  modified_by         Int?
  is_active           Boolean   @default(true)
  is_deleted          Boolean   @default(false)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model country {
  country_id      Int       @id @default(autoincrement())
  name            String    @db.VarChar(100)
  alpha_2         String    @default("") @db.Char(2)
  alpha_3         String    @default("") @db.Char(3)
  phone_code      Int       @default(0)
  currency        String    @db.VarChar(3)
  currency_symbol String    @db.VarChar(10)
  created_on      DateTime  @default(dbgenerated("(now())")) @db.Timestamp(0)
  modified_on     DateTime? @db.Timestamp(0)
  is_deleted      Boolean   @default(false)
  states          state[]   // Establishing the one-to-many relationship

}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model project {
  project_id              Int       @id @default(autoincrement())
  name                    String    @default("0") @db.VarChar(100)
  description             String?   @db.VarChar(250)
  no_of_property          Boolean   @default(true)
  address                 String?   @db.VarChar(250)
  pincode                 String    @db.VarChar(6)
  city_id                 Int       @default(0)
  state_id                Int       @default(0)
  country_id              Int       @default(0)
  contact_no_1            String    @db.VarChar(15)
  contact_no_2            String?   @db.VarChar(15)
  email_id                String?   @db.VarChar(50)
  contact_no_sales_1      String    @db.VarChar(15)
  contact_no_sales_2      String?   @db.VarChar(15)
  email_id_for_sales      String    @db.VarChar(50)
  disclaimer              String    @db.Text
  privacy_policy_url      String?   @db.VarChar(250)
  terms_and_condition_url String?   @db.VarChar(250)
  created_on              DateTime  @default(dbgenerated("(now())")) @db.Timestamp(0)
  created_by              Int       @default(0)
  modified_on             DateTime? @db.Timestamp(0)
  modified_by             Int?
  is_deleted              Boolean   @default(false)
}

 model state {
  state_id    Int       @id @default(autoincrement())
  name        String  @unique  @db.VarChar(100)
  alpha_code  String    @db.VarChar(10)
  country_id  Int
  created_on  DateTime  @default(dbgenerated("(now())")) @db.DateTime(0)
  modified_on DateTime? @db.DateTime(0)
  is_deleted  Boolean   @default(false)
  countries  country   @relation(fields: [country_id], references: [country_id])

}

model todos {
  id          Int    @id @default(autoincrement())
  name        String @db.VarChar(255)
  description String @db.VarChar(255)
}
